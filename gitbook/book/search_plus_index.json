{"./":{"url":"./","title":"TOTAL","keywords":"","body":"1. 总览1. 总览 #!/usr/bin/python # -*- coding: UTF-8 -*- import re import socket CHARSET = 'utf-8' def send_cmd(irc_sock, cmd) : \"\"\" 发送命令到 IRC 服务器 Args: irc_sock: 与 IRC 服务器的 socket 连接 cmd: 待发送的命令（不需 \\r\\n 结束符，会自动补全） Returns: None \"\"\" print(' => %s' % cmd) irc_sock.send(('%s\\r\\n' % cmd).encode(CHARSET)) return def send_msg(irc_sock, to, msg) : \"\"\" 发送 PRIVMSG 私信命令到 IRC 服务器 Args: irc_sock: 与 IRC 服务器的 socket 连接 to: 接收私信的对象 msg: 待发送的私信内容 Returns: None \"\"\" cmd = 'PRIVMSG %s :%s' % (to, msg) send_cmd(irc_sock, cmd) return def conn_irc(irc_host, irc_port, irc_chan, username, anywords) : \"\"\" 连接到 IRC 服务器的指定聊天频道 Args: irc_host: IRC 服务器主机 irc_port: IRC 服务端口 irc_chan: IRC 聊天频道 username: 在 IRC 聊天室标识自己身份的昵称（任意值均可，只要未被他人在 IRC 上使用即可） anywords: 首次加入 IRC 聊天室后用于打招呼的语句，任意即可 Returns: irc_sock: 与 IRC 服务器的 socket 连接 \"\"\" irc_sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) irc_sock.connect((irc_host, irc_port)) # NICK 和 USER 命令必须先发送，以声明自己身份 # （注意同一个 IP 不能同时开两次以上的连接，否则只有第一次能够注册成功） send_cmd(irc_sock, 'NICK %s' % username) send_cmd(irc_sock, 'USER %s %s %s :%s' % (username, username, username, anywords)) send_cmd(irc_sock, 'JOIN %s' % irc_chan) # 加入频道 return irc_sock def interface(irc_sock, bot_name, username) : \"\"\" 在 IRC 聊天室与 robot 进行消息交互 Args: irc_sock: 与 IRC 服务器的 socket 连接 bot_name: 机器人的昵称 username: 自己的昵称 Returns: None \"\"\" finish = False while finish == False : rsp_data = irc_sock.makefile(encoding=CHARSET) # 逐行解析响应数据 for line in rsp_data: print(line, end='') if line.startswith('PING') : send_cmd(irc_sock, line.replace('PING', 'PONG')) # :EXP!EXP@hzv-tsd.o51.eaqa1b.IP MODE EXP +x elif line.startswith(':%s' % username) : send_msg(irc_sock, bot_name, '!ep1') # :Candy!Candy@root-me.org PRIVMSG EXP :645 / 8814 elif line.startswith(':%s' % bot_name) : mth = re.match(r':.+?:(\\d+) / (\\d+)$', line) if mth : n1 = int(mth.group(1)) n2 = int(mth.group(2)) rst = (n1 ** 0.5) * n2 # n1 的平方根乘以 n2 answer = round(rst, 2) # 结果保留 2 位小数 send_msg(irc_sock, bot_name, '!ep1 -rep %s' % answer) else : send_cmd(irc_sock, 'QUIT') # 退出聊天频道 finish = True break return if __name__ == '__main__' : irc_host = 'irc.root-me.org' irc_port = 6667 irc_chan = '#root-me_challenge' bot_name = 'Candy' username = 'EXP' anywords = 'http://exp-blog.com' # 连接到 ROOTME 的 IRC 聊天室并加入 CHALLENGE 聊天频道 irc_sock = conn_irc(irc_host, irc_port, irc_chan, username, anywords) # 在聊天室与 robot 进行消息交互 interface(irc_sock, bot_name, username) # 关闭 IRC 的 socket 连接 irc_sock.shutdown(2) irc_sock.close() Copyright © EXP 2019 all right reserved，powered by Gitbook本书发布时间： 2019-11-02 17:48:17 "},"markdown/part1/":{"url":"markdown/part1/","title":"Introduction","keywords":"","body":"1. readme1. readme readmereadmereadmereadmereadme Copyright © EXP 2019 all right reserved，powered by Gitbook本书发布时间： 2019-11-02 17:22:27 "},"markdown/part1/writing.html":{"url":"markdown/part1/writing.html","title":"Writing is nice","keywords":"","body":"1. write1. write writewritewritewrite Copyright © EXP 2019 all right reserved，powered by Gitbook本书发布时间： 2019-11-02 17:22:27 "},"markdown/part1/gitbook.html":{"url":"markdown/part1/gitbook.html","title":"GitBook is nice","keywords":"","body":"【写在前面】 　　这是现在网上流传的一套关于M皇后问题的构造法公式，但是这套公式是怎么得来的，却鲜有人知。 而文本会详细阐述这套公式的推导过程： 对于 $m \\geq 4$ 的 m皇后 问题： 　　若 $m \\bmod 6 \\neq 2$ 且 $m \\bmod 6 \\neq 3$ ，则可通过（A1）或（A2）导出解序列。 　　若 $m \\bmod 6 = 2$ 或 $m \\bmod 6 = 3$ ，则可通过（B1）或（B2）或（B3）或（B4）导出解序列。 　　其中当 $m$ 是偶数时, $n=\\dfrac{m}{2}$ ；当 $m$ 是奇数时 $n=\\dfrac{m-1}{2}$ ， $ \\small{ \\begin{cases} \\text{A1-m是偶数: }[2,4,6,8,...,m],[1,3,5,7,...,m-1] \\\\ \\text{A2-m是奇数: }[2,4,6,8,...,m-1],[1,3,5,7,...,m-2],[m] \\\\ \\text{B1-m偶n偶: } \\\\ \\quad [n,n+2,...,m],[2,4,6,...,n-2],[n+3,n+5,...,m-1],[1,3,5,...,n+1] \\\\ \\text{B2-m偶n奇: } \\\\ \\quad [n,n+2,...,m-1],[1,3,5,...,n-2],[n+3,n+5,...,m],[2,4,6,...,n+1] \\\\ \\text{B3-m奇n偶: } \\\\ \\quad [n,n+2,...,m-1],[2,4,6,...,n-2],[n+3,n+5,...,m-2],[1,3,5,...,n+1],[m] \\\\ \\text{B4-m奇n奇: } \\\\ \\quad [n,n+2,...,m-2],[1,3,5,...,n-2],[n+3,n+5,...,m-1],[2,4,6,...,n+1],[m] \\end{cases} } $ Copyright © EXP 2019 all right reserved，powered by Gitbook本书发布时间： 2019-11-02 17:22:27 "},"markdown/part1/segs/seg1.html":{"url":"markdown/part1/segs/seg1.html","title":"SEG1","keywords":"","body":"1. SEG11. SEG1 测试 Copyright © EXP 2019 all right reserved，powered by Gitbook本书发布时间： 2019-11-02 17:22:27 "},"markdown/part1/segs/seg2.html":{"url":"markdown/part1/segs/seg2.html","title":"SEG2","keywords":"","body":"1. SEG21.1. sdfsdfs1.2. dsgfggg1.2.1. frdgdgdgf1. SEG2 22222 sdada 1.1. sdfsdfs 1.2. dsgfggg 1.2.1. frdgdgdgf dgsgsgsdg dfsfd sdfgsg sdfdsfds Copyright © EXP 2019 all right reserved，powered by Gitbook本书发布时间： 2019-11-02 17:22:27 "},"markdown/part2/":{"url":"markdown/part2/","title":"Introduction","keywords":"","body":"1. p2221. p222 测试 Copyright © EXP 2019 all right reserved，powered by Gitbook本书发布时间： 2019-11-02 17:22:27 "},"markdown/part2/feedback_please.html":{"url":"markdown/part2/feedback_please.html","title":"We love feedback","keywords":"","body":"1. fp1. fp fgfdhhfg Copyright © EXP 2019 all right reserved，powered by Gitbook本书发布时间： 2019-11-02 17:22:27 "},"markdown/part2/better_tools.html":{"url":"markdown/part2/better_tools.html","title":"API文档","keywords":"","body":"1. 定义方法1.1. 打印1.2. 定义变量1. 定义方法 1.1. 打印 展示 JavaScript 和 Java 如何输出信息 这里演示 JavaScript 如何输出信息到控制台 console.log('Hello World'); 这里演示 Java 如何输出信息到控制台 System.out.println(\"Hello World\"); 这里是 JavaScript 和 Java 共同的信息 1.2. 定义变量 这里演示 JavaScript 和 Java 如何定义变量 这里演示 JavaScript 如何定义变量： var i = 0; var j = \"a\"; var k = new function() { } 这里演示 Java 如何定义变量 int i = 0; String j = \"a\"; Object o = new Object(); Copyright © EXP 2019 all right reserved，powered by Gitbook本书发布时间： 2019-11-02 18:39:40 "},"markdown/Git.html":{"url":"markdown/Git.html","title":"什么 is Git","keywords":"","body":"Git 是一个分布式版本控制软件，最初由林纳斯·托瓦兹（Linus Torvalds）创作，于2005年以GPL发布。最初目的是为更好地管理Linux内核开发而设计。应注意的是，这与GNU Interactive Tools[6]（一个类似Norton Commander界面的文件管理器）有所不同。 Copyright © EXP 2019 all right reserved，powered by Gitbook本书发布时间： 2019-11-02 18:43:38 "},"markdown/Github.html":{"url":"markdown/Github.html","title":"什么 is Github","keywords":"","body":"GitHubbbbb 是一个分布式版本控制软件，最初由林纳斯·托瓦兹（Linus Torvalds）创作，于2005年以GPL发布。最初目的是为更好地管理Linux内核开发而设计。应注意的是，这与GNU Interactive Tools[6]（一个类似Norton Commander界面的文件管理器）有所不同。 Copyright © EXP 2019 all right reserved，powered by Gitbook本书发布时间： 2019-11-02 18:43:43 "},"markdown/tail.html":{"url":"markdown/tail.html","title":"Last part without title","keywords":"","body":"1. tail1.1. sxxx1.1.1. dsfsdfg1.1.2. hgggg1.2. dsfgsgsg1. tail sxxx dsfsdfg hgggg dsfgsgsg tail 1.1. sxxx 1.1.1. dsfsdfg sdfsfsf 1.1.2. hgggg 6666 dsgfgfdlll 1.2. dsfgsgsg [ ] 这是一个未选中的 [x] 这是一个已选中的 99999999999999 Copyright © EXP 2019 all right reserved，powered by Gitbook本书发布时间： 2019-11-02 17:57:33 "}}